import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = '7341624211:AAHa1vPHjlZE-4mNxHRCmA0Y-qnoyuP4PGs'
OPENWEATHER_API_KEY = '3027169bca6999a656031cc00b3f9082'
PROXY_URL = None  # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ø—Ä–æ–∫—Å–∏, —É–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "http://proxy_ip:port"


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await update.message.reply_text(
            "üå§Ô∏è –ë–æ—Ç –ø–æ–≥–æ–¥–∏ –ø—Ä–∞—Ü—é—î!\n"
            "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /weather <–º—ñ—Å—Ç–æ>"
        )
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")


async def weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–í–∫–∞–∂—ñ—Ç—å —Å–≤–æ—î –º—ñ—Å—Ç–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /weather Kyiv")
        return

    city = ' '.join(context.args)

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        response = requests.get(
            "http://api.openweathermap.org/data/2.5/weather",
            params={
                'q': city,
                'appid': OPENWEATHER_API_KEY,
                'units': 'metric',
                'lang': 'ru'
            },
            timeout=10
        )
        data = response.json()

        if data['cod'] != 200:
            raise ValueError(data.get('message', '–û—à–∏–±–∫–∞ API'))

        weather_info = (
            f"üå¶Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
            f"‚Ä¢ {data['weather'][0]['description'].capitalize()}\n"
            f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']}¬∞C\n"
            f"‚Ä¢ –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {data['main']['feels_like']}¬∞C\n"
            f"‚Ä¢ –í–æ–ª–æ–≥–∞: {data['main']['humidity']}%\n"
            f"‚Ä¢ –í—ñ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å"
        )

        await update.message.reply_text(weather_info)

    except requests.exceptions.RequestException:
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ –¥–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≥–æ–¥–∏")
    except ValueError as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")
    except Exception as e:
        await update.message.reply_text("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç–∞")
        print(f"–ü–æ–º–∏–ª–∫–∞: {e}")


def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–∫—Å–∏
    app = Application.builder().token(TELEGRAM_TOKEN)

    if PROXY_URL:
        app = app.proxy_url(PROXY_URL).get_updates_proxy_url(PROXY_URL)

    app = app.build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("weather", weather))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    try:
        print("–ë–æ—Ç –ø–æ—á–∏–Ω–∞—î —Å–≤–æ—î —ñ—Å–Ω—É–≤–∞–Ω–Ω—è...")
        app.run_polling()
    except Exception as e:
        print(f"–§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    finally:
        print("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–∏–π")


if __name__ == '__main__':
    main()
